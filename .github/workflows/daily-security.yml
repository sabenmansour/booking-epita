name: Daily Security Pipeline

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  dependencies-analysis:
    runs-on: ubuntu-latest
    name: Dependencies Analysis (OSV Scanner)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download OSV Scanner
        run: |
          curl -L -o osv-scanner https://github.com/google/osv-scanner/releases/latest/download/osv-scanner_linux_amd64
          chmod +x osv-scanner
        
      - name: Run OSV Scanner
        run: |
          echo "Scanning with OSV Scanner..."
          ./osv-scanner --format=sarif --output=dependencies.sarif . || true
          
          # Créer un fichier SARIF vide si aucune vulnérabilité n'est trouvée
          if [ ! -f "dependencies.sarif" ]; then
            echo "No vulnerabilities found, creating empty SARIF file"
            cat > dependencies.sarif << 'EOF'
{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "OSV Scanner",
          "version": "1.0.0"
        }
      },
      "results": []
    }
  ]
}
EOF
          fi
          
          # Afficher le contenu pour debug
          echo "Contents of dependencies.sarif:"
          cat dependencies.sarif || echo "File not readable"
        continue-on-error: true
            
      - name: Upload Dependencies SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: dependencies.sarif
          category: dependencies
        if: always()

  source-code-analysis:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    name: Source Code Analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Semgrep
        run: |
          echo "Running Semgrep analysis..."
          semgrep --config=p/java --sarif --output=semgrep.sarif .
          
          # Afficher le nombre de vulnérabilités trouvées
          if [ -f "semgrep.sarif" ]; then
            ISSUES=$(cat semgrep.sarif | jq '.runs[0].results | length' 2>/dev/null || echo 0)
            echo "Semgrep found $ISSUES security issues"
          fi
        continue-on-error: true
          
      - name: Upload Source Code SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
          category: source-code
        if: always()
